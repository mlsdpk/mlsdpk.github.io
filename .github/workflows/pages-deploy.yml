name: "Build and Deploy"
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      - name: CV Generation - clone cv-tools Repository
        run: |
          git clone https://github.com/mlsdpk/cv-tools.git

      - name: CV Generation - set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: CV Generation - build and Run Docker Container
        run: |
          docker build -t cv-tools cv-tools/
          docker run --rm -v $(pwd):/workdir cv-tools ./cv-tools/run.sh -c assets/docs/cv/config.yaml

      # - name: CV Generation - copy to assets folder
      #   run: cp cv-tools/output/output.pdf assets/docs/cv/cv.pdf

      # Convert PDF to self-contained HTML with pdf2htmlEX
      - name: Convert CV PDF to HTML using pdf2htmlEX
        run: |
          docker run --rm \
            -v $(pwd)/cv-tools/output:/pdf \
            pdf2htmlex/pdf2htmlex:0.18.8.rc2-master-20200820-alpine-3.12.0-x86_64 \
            --zoom 1.3 \
            output.pdf

      - name: Install CV HTML into site
        run: mv cv-tools/output/output.html assets/docs/cv/index.html

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Build site
        run: |
          npm install && npm run build
          bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: "production"

      - name: Test Site
        run: bash tools/test.sh

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
